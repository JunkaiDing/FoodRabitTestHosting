# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
	globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
# type Meal @model @auth(
#     rules: [
#       { allow: owner, operations: [update, delete] },
#       { allow: groups, groups: ["Restaurant"], operations: [create] },
#       { allow: private, operations: [list] },
#       { allow: public, operations: [list] },
#     ]){
#   id: ID!
#   name: String!
#   description: String
# }

# type Profile @model @auth(
#     rules: [
#       { allow: owner, ownerField: "customer", operations: [create, update, delete, read] },
#       { allow: groups, groups: ["Customer"], operations: [create] }
#       { allow: public, operations: [read] },
#     ]){
#   id: ID!
#   name: String
# }

type Restaurant @model {
	id: ID!
	name: String!
	description: String
	picture_location: String
	foods: [Food] @hasMany
}

type Food @model {
	id: ID!
	name: String!
	description: String
	restaurant: Restaurant! @belongsTo
	picture_location: String
	orders: [Order] @hasMany
}

type Order @model {
	id: ID!
	food: Food! @belongsTo
	fulfilled: Boolean!
	customer: Customer! @belongsTo
	address: String!
	unit: String
	delivery_notes: String
	date: AWSDateTime!
	# todo: date?
}

# todo: which fields are optional?
type Customer @model {
	id: ID!
	name: String
	email: String!
	phone_number: String
	address: String!
	unit: String
	stripe_id: String
	delivery_notes: String
	orders: [Order] @hasMany
	plan: Plan @hasOne
}

type Plan @model {
	id: ID!
	type: Type!
	remaining_credits: Int!
	start_date: AWSDateTime!
	expiry_date: AWSDateTime!
}

type WeeklyMenu @model {
	mon: [Food] @hasMany
	tue: [Food] @hasMany
	wed: [Food] @hasMany
	thu: [Food] @hasMany
	fri: [Food] @hasMany
}

enum Type {
	weekly
	monthly
	termly
}
